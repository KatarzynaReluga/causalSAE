% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_pop.R
\name{generate_pop}
\alias{generate_pop}
\title{Generate populations}
\usage{
generate_pop(
  X = matrix(),
  X_outcome = NULL,
  X_p_score = NULL,
  coeffs = get_default_coeffs(),
  errors_outcome = get_default_errors_outcome(),
  rand_eff_outcome = get_default_rand_eff_outcome(),
  rand_eff_p_score = get_default_rand_eff_p_score(),
  regression_type = c("continuous", "binary", "poisson", "nb"),
  Ni_size = 100,
  m = 50,
  no_sim = 100,
  start_seed = 1
)
}
\arguments{
\item{X}{Covariates for generating outcome and propensity score}

\item{X_outcome}{Covariates for generating outcome}

\item{X_p_score}{Covariates for generating propensity score}

\item{coeffs}{List of coefficients for generating outcomes and propensity scores, tat is:
\itemize{
\item intercept_outcome
\item intercept_p_score
\item coef_outcome
\item coef_p_score
\item mean_A
\item var_A
}}

\item{errors_outcome}{List of parameters to generate errors, that is:
\itemize{
\item var_e
\item mean_e
\item frac_out
\item var_e_out
\item mean_e_out
\item disturbance_outcome
}}

\item{rand_eff_outcome}{List of parameters to generate random effects for outcome model, that is:
\itemize{
\item var_re
\item mean_re
\item frac_out
\item var_re_out
\item mean_re_out
}}

\item{rand_eff_p_score}{List of parameters to generate random effects for propensity score model, that is:
\itemize{
\item var_re
\item mean_re
\item frac_out
\item var_re_out
\item mean_re_out
}}

\item{regression_type}{Type of outcomes}

\item{Ni_size}{Vector of subpopulations sizes}

\item{m}{Number of subpopulations}

\item{no_sim}{Number of simulations}

\item{start_seed}{Seed to replicate simulations}
}
\value{
\item{populations}{List composed of data frames which contain covariates X,
treatment status A, group indicator group, propensity score p_score, and outcome y}
}
\description{
Generate populations
}
\examples{

m = 50 
ni = rep(5, m)
Ni = rep(100, m)
N = sum(Ni)
n = sum(ni)

X <- generate_X(
 n = N,
 p = 1,
 covariance_norm = NULL,
 cov_type = "unif",
 start_seed = 1
)


X_outcome <- generate_X(
 n = N,
 p = 1,
 covariance_norm = NULL,
 cov_type = "lognorm",
 start_seed = 1
)


populations <- generate_pop(X, X_outcome,

coeffs = get_default_coeffs(),

errors_outcome = get_default_errors_outcome(),

rand_eff_outcome = get_default_rand_eff_outcome(),
rand_eff_p_score = get_default_rand_eff_p_score(),

regression_type = "continuous",
Ni_size  = 100,
m = 50,
no_sim = 100,
start_seed = 1)



}
